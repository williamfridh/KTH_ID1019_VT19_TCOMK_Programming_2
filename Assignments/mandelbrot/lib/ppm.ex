defmodule PPM do

  @moduledoc """
  Documentation for module PPM.

  This module was given by the course teacher to the student
  used for generating images. Nota that som of the code in
  this file might have been slightly adjusted to better fit
  the students way of coding.
  """

  # write(name, image) The image is a list of rows, each row a list of
  # tuples {R,G,B}. The RGB values are 0-255.

  def write(name, image) do
    height = length(image)
    width = length(List.first(image))
    IO.puts(height)
    IO.puts(width)
    IO.puts("img/#{name}")
    {:ok, fd} = File.open("img/#{name}", [:write])
    IO.puts(fd, "P6")
    IO.puts(fd, "#generated by ppm.ex")
    IO.puts(fd, "#{width} #{height}")
    IO.puts(fd, "255")
    rows(image, fd)
    File.close(fd)
  end

  defp rows(rows, fd) do
    Enum.each(rows, fn(r) ->
      colors = row(r)
      IO.write(fd, colors)
    end)
  end

  defp row(row) do
    List.foldr(row, [], fn({:rgb, r, g, b}, a) ->
      [r, g, b | a]
    end)
  end

end
